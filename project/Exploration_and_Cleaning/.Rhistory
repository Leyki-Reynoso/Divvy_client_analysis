library(corrplot)
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
library(ggplot2)
library(tmap)
library(geosphere)
library(sf)
trips_df <- read_csv("../data/trips_data.csv")
head(trips_df)
tail(trips_df)
cat("Dimensions:\n\n")
dim(trips_df)
cat("\nsummary:\n\n")
summary(trips_df)
ggplot(trips_df, aes(x = start_lat)) +
geom_histogram(fill = "blue", color = "black") +
labs(title = "Frequency Distribution of start_lat", x = "start_lat", y = "Frequency")
ggplot(trips_df, aes(x = start_lng)) +
geom_histogram(fill = "blue", color = "black") +
labs(title = "Frequency Distribution of start_lng", x = "start_lng", y = "Frequency")
ggplot(trips_df, aes(x = end_lat)) +
geom_histogram(fill = "blue", color = "black") +
labs(title = "Frequency Distribution of end_lat", x = "end_lat", y = "Frequency")
ggplot(trips_df, aes(x = end_lng)) +
geom_histogram(fill = "blue", color = "black") +
labs(title = "Frequency Distribution of end_lng", x = "end_lng", y = "Frequency")
ggplot(trips_df, aes(x = started_at)) +
geom_histogram(fill = "blue", color = "black") +
labs(title = "Frequency Distribution of started_at", x = "started_at", y = "Frequency")
ggplot(trips_df, aes(x = ended_at)) +
geom_histogram(fill = "blue", color = "black") +
labs(title = "Frequency Distribution of ended_at", x = "ended_at", y = "Frequency")
ggplot(trips_df, aes(x = rideable_type)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Frequency of rideable_type Categories", x = "rideable_type", y = "Count")
ggplot(trips_df, aes(x = member_casual)) +
geom_bar(fill = "skyblue", color = "black") +
labs(title = "Frequency of member_casual Categories", x = "member_casual", y = "Count")
trips_df %>%
select(everything()) %>%
filter(rideable_type == "docked_bike") %>%
view()
trips_df %>%
filter(duplicated(.)) %>%
count()
trips_df %>%
select(everything()) %>%
summarise(across(everything(), ~sum(is.na(.))))
trips_df %>%
select(start_station_id,end_station_id, start_station_name, end_station_name,end_lat,end_lng) %>%
filter(
(!complete.cases(start_station_name) & complete.cases(start_station_id))
| (!complete.cases(end_station_name) & complete.cases(end_station_id))
| (!complete.cases(end_lng) & complete.cases(end_lat))) %>%
count()
trips_df %>%
select(everything()) %>%
filter(rideable_type == "docked_bike")
library(corrplot)
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
library(ggplot2)
library(tmap)
library(geosphere)
library(sf)
trips_df <- read_csv("../data/trips_data.csv")
library(corrplot)
library(tidyverse)
library(ggplot2)
library(maps)
library(ggmap)
library(ggplot2)
library(tmap)
library(geosphere)
library(sf)
trips_df <- read_csv("../data/trips_data.csv")
